{"version":3,"sources":["App/Paddle.js","App/Ball.js","App/Score.js","App.js","index.js"],"names":["Paddle","react_default","a","createElement","key","this","props","id","className","style","top","loc","y","dR","left","x","width","dims","height","React","Component","Ball","Score","fontSize","count","playerS","enemyS","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","calculateViewDimensions","clientHeight","document","documentElement","clientWidth","viewWidth","viewHeight","viewTop","viewLeft","autoLocation","relLoc","paddleStr","initPadLoc","initX","maxX","deltaX","paddleCenter","paddleDims","ballCenter","state","ballLoc","ballDims","lastHit","selectedPlayer","paddleWallCollision","nextY","maxY","ballPaddleCollision","nextVY","deltaY","reboundPI","Math","PI","nextVX","sin","cos","random","newLoc","setState","ballVel","wallHit","ballWallCollision","nextBallVel","nextBallLoc","ballNoCollision","newBall","randomBallDir","newScore","score","initDeg","floor","paddleMovement","relEnemyLoc","relPlayerLoc","nextEnemyLoc","enemyLoc","nextPlayerLoc","playerLoc","ballMovement","nextFrame","viewDims","componentDidMount","intervalId","setInterval","handleMouseDown","event","clientY","clientX","isMouseDown","handleMouseUp","relClickPos","paddleTopToMiddle","handleMouseMove","clickOnBoard","stopPropagation","preventDefault","playerV","clearInterval","tabIndex","onMouseDown","onMouseUp","onMouseMove","App_Ball","App_Paddle","span","App_Score","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.4f6ac746.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Paddle extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n      key={this.props.id}\r\n      className=\"paddle\"\r\n      style={{\r\n        top: this.props.loc.y * this.props.dR + 'px',\r\n        left: this.props.loc.x * this.props.dR + 11 + 'px',\r\n        width: this.props.dims.width * this.props.dR + 'px',\r\n        height: this.props.dims.height * this.props.dR + 'px'\r\n      }}\r\n      >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Paddle;","import React from 'react';\r\n\r\nclass Ball extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n      key=\"2\"\r\n      className=\"ball\"\r\n      style={{\r\n        left: this.props.loc.x * this.props.dR + 15 + 'px',\r\n        top: this.props.loc.y * this.props.dR + 'px',\r\n        width: this.props.dims.width * this.props.dR + 'px',\r\n        height: this.props.dims.height * this.props.dR + 'px'\r\n      }}\r\n      >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ball;","import React from 'react';\r\n\r\nclass Score extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"scoreboard\" >\r\n        <div\r\n          key=\"score1\"\r\n          className=\"board-num\"\r\n          style={{\r\n            left: 28 + '%',\r\n            fontSize: 15 * this.props.dR\r\n          }}\r\n        >\r\n          {this.props.count.playerS}\r\n        </div>\r\n        <div\r\n          key=\"score2\"\r\n          className=\"board-num\"\r\n          style={{\r\n            left: 65 + '%',\r\n            fontSize: 15 * this.props.dR\r\n          }}\r\n        >\r\n          {this.props.count.enemyS}\r\n        </div>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport './index.css';\r\nimport Paddle from './App/Paddle.js';\r\nimport Ball from './App/Ball.js';\r\nimport Score from './App/Score.js';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.paddleDims    = { height: 14, width: 1.5 };\r\n    this.ballDims      = { height: 2, width: 2 };\r\n\r\n    this.maxX          = 140;\r\n    this.maxY          = 100;\r\n\r\n\r\n    this.state = {\r\n      // Player is the left paddle, Enemy is the right paddle\r\n      playerLoc:    {x: 2, y: this.maxY/2 - this.paddleDims.height/2}, \r\n      enemyLoc:     {x: this.maxX - this.paddleDims.width - 2, y: this.maxY/2 - this.paddleDims.height/2},\r\n      ballLoc:      { \r\n                      x: this.maxX/2 - this.ballDims.height/2, \r\n                      y: this.maxY/2 - this.ballDims.width/2 \r\n                    },\r\n\r\n      playerV:      0,\r\n      ballVel:      this.randomBallDir(),\r\n\r\n      score:        { playerS: 0, enemyS: 0 },\r\n      lastHit:      \"\",\r\n      wallHit:      \"\",\r\n      isMouseDown:  false,\r\n      selectedPlayer: \"\",\r\n      // viewport dimensions\r\n      viewDims: this.calculateViewDimensions(),\r\n    }\r\n  }\r\n\r\n  // Change view dimensions dynamically\r\n  calculateViewDimensions = () => {\r\n    let clientHeight = document.documentElement.clientHeight;\r\n    let clientWidth = document.documentElement.clientWidth;\r\n\r\n    let viewWidth = 840;\r\n    let viewHeight = 600;\r\n    \r\n    if (clientWidth < 840 || clientHeight < 600) {\r\n      if (clientWidth < clientHeight * 8.4/6) {\r\n        viewHeight = clientWidth * 6/8.4;\r\n        viewWidth = clientWidth;\r\n      } else {\r\n        viewWidth = clientHeight * 8.4/6;\r\n        viewHeight = clientHeight;\r\n      }\r\n    }\r\n\r\n    return {\r\n      viewWidth,\r\n      viewHeight,\r\n      viewTop: (document.documentElement.clientHeight - viewHeight) / 2,\r\n      viewLeft: (document.documentElement.clientWidth - viewWidth) / 2,\r\n      dR: viewHeight / 100,\r\n    }\r\n  }\r\n\r\n  // Automove if paddle is not selected\r\n  autoLocation = (relLoc, paddleStr, initPadLoc) => {\r\n    let initX   = this.maxX * 0.5,  // Where v will start to change\r\n        deltaV  = 0.8,        // maximum add to this.state.enemyLoc\r\n        deltaX  = this.maxX - 100, // linear scale\r\n        vo      = 0.7,\r\n        paddleCenter = initPadLoc.y + this.paddleDims.height/2,\r\n        ballCenter   = this.state.ballLoc.y + this.ballDims.height/2;\r\n\r\n\r\n    if (this.state.lastHit !== paddleStr && this.state.selectedPlayer !== paddleStr) {\r\n      if (ballCenter - paddleCenter < -1) { // Ball above paddle\r\n        if (paddleStr === \"enemy\" && this.state.ballLoc.x >= initX) {\r\n          if (ballCenter - paddleCenter < -3) { // Speed up\r\n            initPadLoc.y -= (relLoc) * (deltaV / deltaX) + vo;\r\n          }\r\n          else { // To prevent stuttering\r\n            initPadLoc.y -= 0.4;\r\n          }\r\n        } else if (paddleStr === \"player\" && this.state.ballLoc.x <= initX) {\r\n          if (ballCenter - paddleCenter < -3) { // Speed up\r\n            initPadLoc.y -= (relLoc) * (deltaV / deltaX) + vo;\r\n          }\r\n          else { // To prevent stuttering\r\n            initPadLoc.y -= 0.4;\r\n          }\r\n        }\r\n      }\r\n      else if (ballCenter - paddleCenter > 1) { // Ball below paddle\r\n        if (paddleStr === \"enemy\" && this.state.ballLoc.x >= initX) {\r\n          if (ballCenter - paddleCenter > 3) { // Speed up\r\n            initPadLoc.y += (relLoc) * (deltaV / deltaX) + vo;\r\n          }\r\n          else { // To prevent stuttering\r\n            initPadLoc.y += 0.4;\r\n        }\r\n        } else if (paddleStr === \"player\" && this.state.ballLoc.x <= initX) {\r\n          if (ballCenter - paddleCenter > 3) { // Speed up\r\n            initPadLoc.y += (relLoc) * (deltaV / deltaX) + vo;\r\n          }\r\n          else { // To prevent stuttering\r\n            initPadLoc.y += 0.4;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return initPadLoc;\r\n  }\r\n  // Paddle collison test\r\n  paddleWallCollision = nextY => {\r\n    if (nextY < 0.5)  return 0.5; // Stop at top wall\r\n    else if (nextY > this.maxY - 0.5 - this.paddleDims.height) return this.maxY - 0.5 - this.paddleDims.height; // Stop at bottom wall\r\n    else return nextY;\r\n  }\r\n\r\n  // Ball collision tests\r\n  ballPaddleCollision = (paddleStr, initPadLoc) => {\r\n    let deltaY        = this.paddleDims.height + this.ballDims.height,\r\n        deltaDeg      = 120, // Ball can shoot at a max angle of 70 deg from either side\r\n        offsetDeg     = (180 - deltaDeg) / 2 + 5, \r\n\r\n        ballCenter    = this.state.ballLoc.y + this.ballDims.height/2,\r\n        collisionLoc  = ballCenter - initPadLoc.y + this.ballDims.height/2,                // Determines rebound angle\r\n        reboundDeg    = collisionLoc * (deltaDeg / deltaY) + offsetDeg, // Measured clockwise\r\n        reboundPI     = reboundDeg* Math.PI / 180,                      // radians\r\n        totalSpeed    = 2.2,                                            // hypotenuse speed\r\n        \r\n        nextVX        = 0,\r\n        nextVY        = 0;\r\n\r\n    if (paddleStr === \"enemy\") {\r\n      nextVX = -Math.sin(reboundPI) * totalSpeed;\r\n    }\r\n    else                        {\r\n      nextVX = Math.sin(reboundPI) * totalSpeed;\r\n    }\r\n    // Add a little rng to stop the autobots from hitting it back and forth forever\r\n    nextVY = -Math.cos(reboundPI) * totalSpeed + (Math.random() - 0.5);\r\n    \r\n    let newLoc = {\r\n      x: this.state.ballLoc.x + nextVX,\r\n      y: this.state.ballLoc.y + nextVY\r\n    };\r\n    this.setState({\r\n      ballVel: { x: nextVX, y: nextVY },\r\n      ballLoc: newLoc,\r\n      lastHit: paddleStr,\r\n      wallHit: \"\"\r\n    })\r\n  }\r\n  ballWallCollision = () => {    \r\n    // reverse y direction\r\n    let nextBallVel = {\r\n      x: this.state.ballVel.x,\r\n      y: -this.state.ballVel.y\r\n    }\r\n    // continue \r\n    let nextBallLoc = {\r\n      x: this.state.ballLoc.x + this.state.ballVel.x,\r\n      y: this.state.ballLoc.y + this.state.ballVel.y\r\n    }\r\n    this.setState({\r\n      ballVel: nextBallVel,\r\n      ballLoc: nextBallLoc\r\n    })\r\n\r\n    // Fixes a glitch where the ball hits a paddle and wall at the same time\r\n    if (this.state.ballLoc.y <= 0) {\r\n      this.setState({\r\n        wallHit: \"top\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        wallHit: \"bottom\"\r\n      })\r\n    }\r\n  }\r\n  ballNoCollision = () => {\r\n    let nextBallVel = {\r\n      x: this.state.ballVel.x,\r\n      y: this.state.ballVel.y\r\n    }\r\n    let nextBallLoc = {\r\n      x: this.state.ballLoc.x + this.state.ballVel.x,\r\n      y: this.state.ballLoc.y + this.state.ballVel.y\r\n    }\r\n    this.setState({\r\n      ballVel: nextBallVel,\r\n      ballLoc: nextBallLoc\r\n    })\r\n  }\r\n\r\n  // Ball spawns\r\n  newBall = () => {\r\n    let nextBallLoc = {\r\n      x: this.maxX/2 - this.ballDims.height/2,\r\n      y: this.maxY/2 - this.ballDims.width/2\r\n    },\r\n      nextBallVel = this.randomBallDir();\r\n\r\n    this.setState({\r\n      ballVel: nextBallVel,\r\n      ballLoc: nextBallLoc,\r\n      wallHit: \"\"\r\n    });\r\n  }\r\n  newScore = () => {\r\n    let playerS = this.state.score.playerS,\r\n        enemyS  = this.state.score.enemyS;\r\n    \r\n    if (this.state.ballLoc.x <= 0) {\r\n      enemyS++;\r\n    } else {\r\n      playerS++\r\n    }\r\n\r\n    this.setState({\r\n      lastHit: \"\",\r\n      score: { playerS, enemyS }\r\n    })\r\n  }\r\n  randomBallDir = () => {\r\n    // degree\r\n    let initDeg = 120 - Math.random() * 60;\r\n    \r\n    // left or right\r\n    let arr = [-1, 1]\r\n    let element = Math.floor(Math.random() * 2);\r\n    let direction = arr[element];\r\n\r\n    return {\r\n      x: direction * Math.sin(Math.PI/180 * initDeg) * 1.8,\r\n      y: Math.cos(Math.PI/180 * initDeg) * 1.8,\r\n    }\r\n  }\r\n  \r\n  // Movements; call collision tests\r\n  paddleMovement = () => {\r\n    const initX       = this.maxX * 0.5,                   // When the ball passes this, the balls become autonomous\r\n        relEnemyLoc   = this.state.ballLoc.x - initX, // The relative locations of the balls from initx\r\n        relPlayerLoc  = initX - this.state.ballLoc.x;\r\n    // Paddles moves if not currently selected with the mouse. AI!\r\n    let nextEnemyLoc = this.autoLocation(relEnemyLoc, \"enemy\", this.state.enemyLoc),\r\n        nextPlayerLoc = this.autoLocation(relPlayerLoc, \"player\", this.state.playerLoc);\r\n    // Paddle/wall collision with a little padding\r\n    nextEnemyLoc.y = this.paddleWallCollision(nextEnemyLoc.y);\r\n    nextPlayerLoc.y = this.paddleWallCollision(nextPlayerLoc.y);\r\n    this.setState({\r\n      playerLoc: nextPlayerLoc,\r\n      enemyLoc: nextEnemyLoc,\r\n    })\r\n  }\r\n  ballMovement = () => {\r\n    // Ball hits left or right wall (Score!)\r\n    if (this.state.ballLoc.x <= 0 || this.state.ballLoc.x + this.ballDims.width >= this.maxX) {\r\n      this.newScore();\r\n      this.newBall();\r\n    }\r\n    else if ( // Ball hits player\r\n      this.state.lastHit !== \"player\" &&\r\n      this.state.ballLoc.x <= this.state.playerLoc.x + this.paddleDims.width &&  // Ball left, paddle right\r\n      this.state.ballLoc.x >= this.state.playerLoc.x - 1 &&                     // Ball left, paddle left\r\n      this.state.ballLoc.y + this.ballDims.height >= this.state.playerLoc.y &&   // Ball bottom, paddle top\r\n      this.state.ballLoc.y <= this.state.playerLoc.y + this.paddleDims.height    // Ball top, paddle bottom\r\n    ) {\r\n      this.ballPaddleCollision(\"player\", this.state.playerLoc);\r\n    } \r\n    else if ( // Ball hits enemy\r\n      this.state.lastHit !== \"enemy\" &&\r\n      this.state.ballLoc.x + this.ballDims.width >= this.state.enemyLoc.x &&     // Ball right, paddle left\r\n      this.state.ballLoc.x <= this.state.enemyLoc.x + this.paddleDims.width + 1 &&   // Ball left, paddle right\r\n      this.state.ballLoc.y + this.ballDims.height >= this.state.enemyLoc.y &&    // Ball bottom, paddle top\r\n      this.state.ballLoc.y <= this.state.enemyLoc.y + this.paddleDims.height     // Ball top, paddle bottom\r\n    ) {\r\n      this.ballPaddleCollision(\"enemy\", this.state.enemyLoc)\r\n    }  // Ball hits top/bottom wall\r\n    else if (\r\n      (this.state.ballLoc.y <= 0 && this.state.wallHit !== \"top\") || \r\n      (this.state.ballLoc.y >= this.maxY - this.ballDims.height && this.state.wallHit !== \"bottom\")\r\n      ) { \r\n      this.ballWallCollision();\r\n    }\r\n    else { // Ball hits nothing\r\n      this.ballNoCollision();\r\n    }\r\n  } \r\n\r\n\r\n  nextFrame = () => {\r\n    this.paddleMovement();\r\n    this.ballMovement();\r\n\r\n    this.setState({\r\n      // Update for mouse calculations if screen changed size\r\n      viewDims: this.calculateViewDimensions(),\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.intervalId = setInterval(this.nextFrame, 1000/60);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  handleMouseDown = event => {\r\n    // Detect if player clicked on a paddle, with extra breathing room\r\n    // If yes, enable mousemove handle\r\n    if (\r\n      event.clientY >= this.state.viewDims.viewTop + this.state.playerLoc.y * this.state.viewDims.dR &&                             // top\r\n      event.clientY <= this.state.viewDims.viewTop + (this.state.playerLoc.y + this.paddleDims.height) * this.state.viewDims.dR &&  // bottom\r\n      event.clientX >= this.state.viewDims.viewLeft + (this.state.playerLoc.x - 2) * this.state.viewDims.dR &&                      // left\r\n      event.clientX <= this.state.viewDims.viewLeft + (this.state.playerLoc.x + this.paddleDims.width + 2) * this.state.viewDims.dR // right\r\n    ) {\r\n      this.setState({\r\n        isMouseDown: true,\r\n        selectedPlayer: \"player\"\r\n      })\r\n    }\r\n    else if (\r\n      event.clientY >= this.state.viewDims.viewTop + this.state.enemyLoc.y * this.state.viewDims.dR &&                              // top\r\n      event.clientY <= this.state.viewDims.viewTop + (this.state.enemyLoc.y + this.paddleDims.height) * this.state.viewDims.dR &&   // bottom\r\n      event.clientX >= this.state.viewDims.viewLeft + (this.state.enemyLoc.x - 2) * this.state.viewDims.dR &&                       // left\r\n      event.clientX <= this.state.viewDims.viewLeft + (this.state.enemyLoc.x + this.paddleDims.width + 2) * this.state.viewDims.dR  // right\r\n    ) {\r\n      this.setState({\r\n        isMouseDown: true,\r\n        selectedPlayer: \"enemy\"\r\n      })\r\n      \r\n    }\r\n  }\r\n  handleMouseUp = event => {\r\n    //disable mousemove handle\r\n    this.setState({\r\n      isMouseDown: false,\r\n      selectedPlayer: \"\"\r\n    })\r\n  }\r\n  relClickPos = event => { \r\n    // Adjusts the location so the paddle is held in the middle\r\n    let paddleTopToMiddle = this.paddleDims.height / 2 * this.state.viewDims.dR,\r\n        click = event.clientY - paddleTopToMiddle;\r\n    return (click - this.state.viewDims.viewTop) / this.state.viewDims.dR\r\n    \r\n  }\r\n  handleMouseMove = event => {\r\n    if (this.state.isMouseDown === true) {\r\n       if (this.state.selectedPlayer === \"player\") { \r\n        let clickOnBoard = this.relClickPos(event)\r\n        // Stop wall collision\r\n        clickOnBoard = this.paddleWallCollision(clickOnBoard);\r\n        this.setState({\r\n          playerLoc: { \r\n            x: 2,\r\n            y: clickOnBoard\r\n          } \r\n        });\r\n        }\r\n      else if (this.state.selectedPlayer === \"enemy\") { \r\n        let clickOnBoard = this.relClickPos(event)\r\n        // Stop wall collision\r\n        clickOnBoard = this.paddleWallCollision(clickOnBoard);\r\n        this.setState({\r\n          enemyLoc: { \r\n            x: this.maxX - this.paddleDims.width - 2,\r\n            y: clickOnBoard\r\n          } \r\n        });\r\n      }\r\n    event.stopPropagation()\r\n    event.preventDefault()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className  =\"viewport lock-screen\"\r\n        tabIndex   =\"0\"\r\n        style ={{\r\n          width: this.state.viewDims.viewWidth,\r\n          height: this.state.viewDims.viewHeight,\r\n          top: this.state.viewDims.viewTop,\r\n          left: this.state.viewDims.viewLeft\r\n        }}\r\n        onMouseDown   ={this.handleMouseDown}\r\n        onMouseUp     ={this.handleMouseUp}\r\n        onMouseMove   ={this.handleMouseMove}\r\n      >\r\n\r\n        <Ball\r\n          loc   ={this.state.ballLoc}\r\n          dims  ={this.ballDims}\r\n          dR    ={this.state.viewDims.dR}\r\n        />\r\n        <Paddle\r\n          id    =\"player\"\r\n          loc   ={this.state.playerLoc}\r\n          dims  ={this.paddleDims}\r\n          dR    ={this.state.viewDims.dR}\r\n          span  ={this.state.viewDims.viewTop}\r\n        />\r\n        <Paddle \r\n          id    =\"enemy\"\r\n          loc   ={this.state.enemyLoc}\r\n          dims  ={this.paddleDims}\r\n          dR    ={this.state.viewDims.dR}\r\n        />\r\n        <Score \r\n          count ={this.state.score} \r\n          dR    ={this.state.viewDims.dR}\r\n        />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}