{"version":3,"sources":["Paddle.js","Ball.js","Score.js","App.js","index.js"],"names":["Paddle","react_default","a","createElement","key","this","props","id","className","style","top","loc","y","dR","left","x","width","dims","height","React","Component","Ball","Score","count","playerS","enemyS","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","autoLocation","relLoc","paddleStr","initPadLoc","initX","maxX","deltaX","paddleCenter","paddleDims","ballCenter","state","ballLoc","ballDims","lastHit","selectedPlayer","paddleWallCollision","nextY","maxY","ballPaddleCollision","nextVY","deltaY","reboundPI","Math","PI","nextVX","sin","cos","random","newLoc","setState","ballVel","wallHit","ballWallCollision","nextBallVel","nextBallLoc","ballNoCollision","newBall","initDeg","randomBallDir","newScore","score","paddleMovement","relEnemyLoc","relPlayerLoc","nextEnemyLoc","enemyLoc","nextPlayerLoc","playerLoc","ballMovement","nextFrame","viewTop","document","documentElement","clientHeight","viewHeight","viewLeft","clientWidth","viewWidth","componentDidMount","intervalId","setInterval","handleMouseDown","event","clientY","clientX","isMouseDown","handleMouseUp","relClickPos","paddleTopToMiddle","click","console","log","handleMouseMove","clickOnBoard","stopPropagation","preventDefault","playerV","clearInterval","tabIndex","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","src_Ball","src_Paddle","span","src_Score","Index","src_App","ReactDOM","render","src_Index","getElementById"],"mappings":"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","file":"static/js/main.3a6bc7a4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Paddle extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n      key={this.props.id}\r\n      className=\"paddle\"\r\n      style={{\r\n        top: this.props.loc.y * this.props.dR + 'px',\r\n        left: this.props.loc.x * this.props.dR + 11 + 'px',\r\n        width: this.props.dims.width * this.props.dR + 'px',\r\n        height: this.props.dims.height * this.props.dR + 'px'\r\n      }}\r\n      >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Paddle;","import React from 'react';\r\n\r\nclass Ball extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n      key=\"2\"\r\n      className=\"ball\"\r\n      style={{\r\n        left: this.props.loc.x * this.props.dR + 15 + 'px',\r\n        top: this.props.loc.y * this.props.dR + 'px',\r\n        width: this.props.dims.width * this.props.dR + 'px',\r\n        height: this.props.dims.height * this.props.dR + 'px'\r\n      }}\r\n      >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ball;","import React from 'react';\r\n\r\nclass Score extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"scoreboard\" >\r\n        <div\r\n          key=\"score1\"\r\n          className=\"board-num one\"\r\n          style={{\r\n            left: 35 * this.props.dR - 21 + 'px'\r\n          }}\r\n        >\r\n          {this.props.count.playerS}\r\n        </div>\r\n        <div\r\n          key=\"score2\"\r\n          className=\"board-num two\"\r\n          style={{\r\n            left: 105 * this.props.dR - 21 + 'px'\r\n          }}\r\n        >\r\n          {this.props.count.enemyS}\r\n        </div>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport './index.css';\r\nimport Paddle from './Paddle.js';\r\nimport Ball from './Ball.js';\r\nimport Score from './Score.js';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // To keep track of original dimensions\r\n    this.viewWidth     = 840;\r\n    this.viewHeight    = 600;\r\n\r\n    this.paddleDims    = { height: 14, width: 1.5 };\r\n    this.ballDims      = { height: 2, width: 2 };\r\n\r\n    this.dR            = this.viewHeight / 100;\r\n    this.maxX          = 140;\r\n    this.maxY          = 100;\r\n    // if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n    //   viewWidth     = 336;\r\n    //   viewHeight    = 240;\r\n    //   viewLeft      = (clientWidth  - viewWidth) / 2;\r\n    //   viewTop       = (clientHeight - viewHeight) / 2;\r\n    //   dR            = viewHeight/100;\r\n    //   this.paddleDims    = { height: 20, width: 3};\r\n    //   ballDims      = { height: 3, width: 3};\r\n    // }\r\n\r\n    this.state = {\r\n      // Player is the left paddle, Enemy is the right paddle\r\n      playerLoc:    {x: 2, y: this.maxY/2 - this.paddleDims.height/2}, \r\n      enemyLoc:     {x: this.maxX - this.paddleDims.width - 2, y: this.maxY/2 - this.paddleDims.height/2},\r\n      ballLoc:      { \r\n                      x: this.maxX/2 - this.ballDims.height/2, \r\n                      y: this.maxY/2 - this.ballDims.width/2 \r\n                    },\r\n\r\n      playerV:      0,\r\n      ballVel:      this.randomBallDir(115 - Math.random() * 65),\r\n\r\n      score:        { playerS: 0, enemyS: 0 },\r\n      lastHit:      \"\",\r\n      wallHit:      \"\",\r\n      isMouseDown:  false,\r\n      selectedPlayer: \"\",\r\n      // viewport dimensions\r\n      viewTop: (document.documentElement.clientHeight - this.viewHeight) / 2,\r\n      viewLeft: (document.documentElement.clientWidth - this.viewWidth) / 2\r\n    }\r\n  }\r\n  autoLocation = (relLoc, paddleStr, initPadLoc) => {\r\n    let initX   = this.maxX * 0.5,  // Where v starts to change\r\n        deltaV  = 0.8,        // maximum add to this.state.enemyLoc\r\n        deltaX  = this.maxX - 100, // linear scale\r\n        vo      = 0.7,\r\n        paddleCenter = initPadLoc.y + this.paddleDims.height/2,\r\n        ballCenter   = this.state.ballLoc.y + this.ballDims.height/2;\r\n\r\n\r\n    if (this.state.lastHit !== paddleStr && this.state.selectedPlayer !== paddleStr) {\r\n      if (ballCenter - paddleCenter < -1) { // Ball above paddle\r\n        if (paddleStr === \"enemy\" && this.state.ballLoc.x >= initX) {\r\n          if (ballCenter - paddleCenter < -3) { // Speed up\r\n            initPadLoc.y -= (relLoc) * (deltaV / deltaX) + vo;\r\n          }\r\n          else { // To prevent stuttering\r\n            initPadLoc.y -= 0.4;\r\n          }\r\n        } else if (paddleStr === \"player\" && this.state.ballLoc.x <= initX) {\r\n          if (ballCenter - paddleCenter < -3) { // Speed up\r\n            initPadLoc.y -= (relLoc) * (deltaV / deltaX) + vo;\r\n          }\r\n          else { // To prevent stuttering\r\n            initPadLoc.y -= 0.4;\r\n          }\r\n        }\r\n      }\r\n      else if (ballCenter - paddleCenter > 1) { // Ball below paddle\r\n        if (paddleStr === \"enemy\" && this.state.ballLoc.x >= initX) {\r\n          if (ballCenter - paddleCenter > 3) { // Speed up\r\n            initPadLoc.y += (relLoc) * (deltaV / deltaX) + vo;\r\n          }\r\n          else { // To prevent stuttering\r\n            initPadLoc.y += 0.4;\r\n        }\r\n        } else if (paddleStr === \"player\" && this.state.ballLoc.x <= initX) {\r\n          if (ballCenter - paddleCenter > 3) { // Speed up\r\n            initPadLoc.y += (relLoc) * (deltaV / deltaX) + vo;\r\n          }\r\n          else { // To prevent stuttering\r\n            initPadLoc.y += 0.4;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return initPadLoc;\r\n  }\r\n  paddleWallCollision = nextY => {\r\n    if (nextY < 0.5)  return 0.5;\r\n    else if (nextY > this.maxY - 0.5 - this.paddleDims.height) return this.maxY - 0.5 - this.paddleDims.height;\r\n    else return nextY;\r\n  }\r\n  ballPaddleCollision = (paddleStr, initPadLoc) => {\r\n    let deltaY        = this.paddleDims.height + this.ballDims.height,\r\n        deltaDeg      = 120, // Ball can shoot at a max angle of 70 deg from either side\r\n        offsetDeg     = (180 - deltaDeg) / 2 + 5, \r\n\r\n        ballCenter    = this.state.ballLoc.y + this.ballDims.height/2,\r\n        collisionLoc  = ballCenter - initPadLoc.y + this.ballDims.height/2,                // Determines rebound angle\r\n        reboundDeg    = collisionLoc * (deltaDeg / deltaY) + offsetDeg, // Measured clockwise\r\n        reboundPI     = reboundDeg* Math.PI / 180,                      // radians\r\n        totalSpeed    = 2.2,                                            // hypotenuse speed\r\n        \r\n        nextVX        = 0,\r\n        nextVY        = 0;\r\n\r\n    if (paddleStr === \"enemy\") {\r\n      nextVX = -Math.sin(reboundPI) * totalSpeed;\r\n    }\r\n    else                        {\r\n      nextVX = Math.sin(reboundPI) * totalSpeed;\r\n    }\r\n    // Add a little rng to stop the autobots from hitting it back and forth forever\r\n    nextVY = -Math.cos(reboundPI) * totalSpeed + (Math.random() - 0.5);\r\n    \r\n    let newLoc = {\r\n      x: this.state.ballLoc.x + nextVX,\r\n      y: this.state.ballLoc.y + nextVY\r\n    };\r\n    this.setState({\r\n      ballVel: { x: nextVX, y: nextVY },\r\n      ballLoc: newLoc,\r\n      lastHit: paddleStr,\r\n      wallHit: \"\"\r\n    })\r\n  }\r\n  ballWallCollision = () => {    \r\n    let nextBallVel = {\r\n      x: this.state.ballVel.x,\r\n      y: -this.state.ballVel.y\r\n    }\r\n    let nextBallLoc = {\r\n      x: this.state.ballLoc.x + this.state.ballVel.x,\r\n      y: this.state.ballLoc.y + this.state.ballVel.y\r\n    }\r\n    this.setState({\r\n      ballVel: nextBallVel,\r\n      ballLoc: nextBallLoc\r\n    })\r\n    // Fixes a glitch where the ball hits a paddle and wall at the same time\r\n    if (this.state.ballLoc.y <= 0) {\r\n      this.setState({\r\n        wallHit: \"top\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        wallHit: \"bottom\"\r\n      })\r\n    }\r\n  }\r\n  ballNoCollision = () => {\r\n    let nextBallVel = {\r\n      x: this.state.ballVel.x,\r\n      y: this.state.ballVel.y\r\n    }\r\n    let nextBallLoc = {\r\n      x: this.state.ballLoc.x + this.state.ballVel.x,\r\n      y: this.state.ballLoc.y + this.state.ballVel.y\r\n    }\r\n    this.setState({\r\n      ballVel: nextBallVel,\r\n      ballLoc: nextBallLoc\r\n    })\r\n  }\r\n  newBall = () => {\r\n    let nextBallLoc = {\r\n      x: this.maxX/2 - this.ballDims.height/2,\r\n      y: this.maxY/2 - this.ballDims.width/2\r\n    },\r\n      initDeg = 140 - Math.random() * 60,\r\n      nextBallVel = this.randomBallDir(initDeg);\r\n    this.setState({\r\n      ballVel: nextBallVel,\r\n      ballLoc: nextBallLoc\r\n    });\r\n  }\r\n  newScore = () => {\r\n    let playerS = this.state.score.playerS,\r\n        enemyS  = this.state.score.enemyS;\r\n    if (this.state.ballLoc.x <= 0) {\r\n      enemyS++;\r\n    } else {\r\n      playerS++\r\n    }\r\n    this.setState({\r\n      lastHit: \"\",\r\n      score: { playerS, enemyS }\r\n    })\r\n  }\r\n\r\n  paddleMovement = () => {\r\n    const initX       = this.maxX * 0.5,                   // When the ball passes this, the balls become autonomous\r\n        relEnemyLoc   = this.state.ballLoc.x - initX, // The relative locations of the balls from initx\r\n        relPlayerLoc  = initX - this.state.ballLoc.x;\r\n    // Paddles moves if not currently selected with the mouse. AI!\r\n    let nextEnemyLoc = this.autoLocation(relEnemyLoc, \"enemy\", this.state.enemyLoc),\r\n        nextPlayerLoc = this.autoLocation(relPlayerLoc, \"player\", this.state.playerLoc);\r\n    // Paddle/wall collision with a little padding\r\n    nextEnemyLoc.y = this.paddleWallCollision(nextEnemyLoc.y);\r\n    nextPlayerLoc.y = this.paddleWallCollision(nextPlayerLoc.y);\r\n    this.setState({\r\n      playerLoc: nextPlayerLoc,\r\n      enemyLoc: nextEnemyLoc,\r\n    })\r\n  }\r\n  ballMovement = () => {\r\n    // Ball hits left or right wall (Score!)\r\n    if (this.state.ballLoc.x <= 0 || this.state.ballLoc.x + this.ballDims.width >= this.maxX) {\r\n      this.newScore();\r\n      this.newBall();\r\n    }\r\n    else if ( // Ball hits player\r\n      this.state.lastHit !== \"player\" &&\r\n      this.state.ballLoc.x <= this.state.playerLoc.x + this.paddleDims.width &&  // Ball left, paddle right\r\n      this.state.ballLoc.x >= this.state.playerLoc.x - 1 &&                     // Ball left, paddle left\r\n      this.state.ballLoc.y + this.ballDims.height >= this.state.playerLoc.y &&   // Ball bottom, paddle top\r\n      this.state.ballLoc.y <= this.state.playerLoc.y + this.paddleDims.height    // Ball top, paddle bottom\r\n    ) {\r\n      this.ballPaddleCollision(\"player\", this.state.playerLoc);\r\n    } \r\n    else if ( // Ball hits enemy\r\n      this.state.lastHit !== \"enemy\" &&\r\n      this.state.ballLoc.x + this.ballDims.width >= this.state.enemyLoc.x &&     // Ball right, paddle left\r\n      this.state.ballLoc.x <= this.state.enemyLoc.x + this.paddleDims.width + 1 &&   // Ball left, paddle right\r\n      this.state.ballLoc.y + this.ballDims.height >= this.state.enemyLoc.y &&    // Ball bottom, paddle top\r\n      this.state.ballLoc.y <= this.state.enemyLoc.y + this.paddleDims.height     // Ball top, paddle bottom\r\n    ) {\r\n      this.ballPaddleCollision(\"enemy\", this.state.enemyLoc)\r\n    }  // Ball hits top/bottom wall\r\n    else if (\r\n      (this.state.ballLoc.y <= 0 && this.state.wallHit !== \"top\") || \r\n      (this.state.ballLoc.y >= this.maxY - this.ballDims.height && this.state.wallHit !== \"bottom\")\r\n      ) { \r\n      this.ballWallCollision();\r\n    }\r\n    else { // Ball hits nothing\r\n      this.ballNoCollision();\r\n    }\r\n  } \r\n  \r\n  randomBallDir = initDeg => {\r\n    return {\r\n      x: Math.sin(Math.PI/180 * initDeg) * 1.8,\r\n      y: Math.cos(Math.PI/180 * initDeg) * 1.8,\r\n    }\r\n  }\r\n\r\n  nextFrame = () => {\r\n    this.paddleMovement();\r\n    this.ballMovement();\r\n\r\n    this.setState({\r\n      // Update for mouse calculations if screen changed size\r\n      viewTop: (document.documentElement.clientHeight - this.viewHeight) / 2,\r\n      viewLeft: (document.documentElement.clientWidth - this.viewWidth) / 2\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.intervalId = setInterval(this.nextFrame, 1000/60);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  handleMouseDown = event => {\r\n    if (\r\n      event.clientY >= this.state.viewTop + this.state.playerLoc.y * this.dR &&                                   // top\r\n      event.clientY <= this.state.viewTop + (this.state.playerLoc.y + this.paddleDims.height) * this.dR &&  // bottom\r\n      event.clientX >= this.state.viewLeft + (this.state.playerLoc.x - 2) * this.dR &&                            // left\r\n      event.clientX <= this.state.viewLeft + (this.state.playerLoc.x + this.paddleDims.width + 2) * this.dR // right\r\n    ) {\r\n      this.setState({\r\n        isMouseDown: true,\r\n        selectedPlayer: \"player\"\r\n      })\r\n    }\r\n    else if (\r\n      event.clientY >= this.state.viewTop + this.state.enemyLoc.y * this.dR &&                                    // top\r\n      event.clientY <= this.state.viewTop + (this.state.enemyLoc.y + this.paddleDims.height) * this.dR &&   // bottom\r\n      event.clientX >= this.state.viewLeft + (this.state.enemyLoc.x - 2) * this.dR &&                             // left\r\n      event.clientX <= this.state.viewLeft + (this.state.enemyLoc.x + this.paddleDims.width + 2) * this.dR  // right\r\n    ) {\r\n      this.setState({\r\n        isMouseDown: true,\r\n        selectedPlayer: \"enemy\"\r\n      })\r\n      \r\n    }\r\n  }\r\n  handleMouseUp = event => {\r\n    this.setState({\r\n      isMouseDown: false,\r\n      selectedPlayer: \"\"\r\n    })\r\n  }\r\n  relClickPos = event => { \r\n    // Adjusts the location so the paddle is held in the middle\r\n    let paddleTopToMiddle = this.paddleDims.height / 2 * this.dR,\r\n        click = event.clientY - paddleTopToMiddle;\r\n        console.log(this.state.viewTop)\r\n    return (click - this.state.viewTop) / this.dR\r\n    \r\n  }\r\n  handleMouseMove = event => {\r\n    if (this.state.isMouseDown === true) {\r\n       if (this.state.selectedPlayer === \"player\") { \r\n        let clickOnBoard = this.relClickPos(event)\r\n        // Stop wall collision\r\n        clickOnBoard = this.paddleWallCollision(clickOnBoard);\r\n        this.setState({\r\n          playerLoc: { \r\n            x: 2,\r\n            y: clickOnBoard\r\n          } \r\n        });\r\n        }\r\n      else if (this.state.selectedPlayer === \"enemy\") { \r\n        let clickOnBoard = this.relClickPos(event)\r\n        // Stop wall collision\r\n        console.log('logged')\r\n        clickOnBoard = this.paddleWallCollision(clickOnBoard);\r\n        this.setState({\r\n          enemyLoc: { \r\n            x: this.maxX - this.paddleDims.width - 2,\r\n            y: clickOnBoard\r\n          } \r\n        });\r\n      }\r\n    event.stopPropagation()\r\n    event.preventDefault()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className     =\"viewport lock-screen\"\r\n        tabIndex      =\"0\"\r\n        style         ={{\r\n                        width: this.viewWidth,\r\n                        height: this.viewHeight,\r\n                        top: this.state.viewTop,\r\n                        left: this.state.viewLeft\r\n        }}\r\n        onMouseDown   ={this.handleMouseDown}\r\n        onMouseUp     ={this.handleMouseUp}\r\n        onMouseMove   ={this.handleMouseMove}\r\n        onTouchStart  ={this.handleMouseDown}\r\n        onTouchEnd    ={this.handleMouseUp}\r\n        onTouchMove   ={this.handleMouseMove}\r\n      >\r\n        <Ball\r\n          loc   ={this.state.ballLoc}\r\n          dims  ={this.ballDims}\r\n          dR    ={this.dR}\r\n        />\r\n        <Paddle\r\n          id    =\"player\"\r\n          loc   ={this.state.playerLoc}\r\n          dims  ={this.paddleDims}\r\n          dR    ={this.dR}\r\n          span  ={this.state.viewTop}\r\n        />\r\n        <Paddle \r\n          id    =\"enemy\"\r\n          loc   ={this.state.enemyLoc}\r\n          dims  ={this.paddleDims}\r\n          dR    ={this.dR}\r\n        />\r\n        <Score \r\n          count ={this.state.score} \r\n          dR    ={this.dR}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nclass Index extends React.Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <App />\n      </div> \n    )\n  }\n}\n\nReactDOM.render(<Index/>, document.getElementById('root'));\n"],"sourceRoot":""}