{"version":3,"sources":["Paddle.js","Ball.js","Score.js","App.js","index.js"],"names":["Paddle","react_default","a","createElement","key","this","props","id","className","style","top","value","y","index","left","x","width","itemprop","height","React","Component","Ball","Score","playerS","enemyS","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","randomBallDir","initDeg","Math","sin","PI","cos","nextFrame","autoLocation","relLoc","paddleStr","initPadLoc","initX","state","maxX","deltaX","paddleCenter","paddleDims","ballCenter","ballLoc","ballDims","lastHit","selectedPlayer","wallCollisionTest","nextY","ballPaddleCollision","nextVY","deltaY","reboundPI","nextVX","random","newLoc","setState","ballVel","wallHit","relEnemyLoc","relPlayerLoc","nextEnemyLoc","enemyLoc","nextPlayerLoc","playerLoc","paddleMovement","score","newScore","nextBallLoc","nextBallVel","newBall","ballWallCollision","ballNoCollision","viewTop","document","documentElement","clientHeight","viewHeight","viewLeft","clientWidth","viewWidth","componentDidMount","intervalId","setInterval","handleMouseDown","event","clientY","dR","clientX","isMouseDown","handleMouseUp","handleMouseMove","paddleTopToMiddle","clickOnBoard","stopPropagation","preventDefault","playerV","clearInterval","tabIndex","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","src_Ball","src_Paddle","span","src_Score","Index","src_App","ReactDOM","render","src_Index","getElementById"],"mappings":"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","file":"static/js/main.ec69fa8c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Paddle extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n      key={this.props.id}\r\n      className=\"paddle\"\r\n      style={{\r\n        top: this.props.value.y * this.props.index + 'px',\r\n        left: this.props.value.x * this.props.index + 11 + 'px',\r\n        width: this.props.itemprop.width * this.props.index + 'px',\r\n        height: this.props.itemprop.height * this.props.index + 'px'\r\n      }}\r\n      >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Paddle;","import React from 'react';\r\n\r\nclass Ball extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n      key=\"2\"\r\n      className=\"ball\"\r\n      style={{\r\n        left: this.props.value.x * this.props.index + 15 + 'px',\r\n        top: this.props.value.y * this.props.index + 'px',\r\n        width: this.props.itemprop.width * this.props.index + 'px',\r\n        height: this.props.itemprop.height * this.props.index + 'px'\r\n      }}\r\n      >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ball;","import React from 'react';\r\n\r\nclass Score extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"scoreboard\" >\r\n        <div\r\n          key=\"score1\"\r\n          className=\"board-num one\"\r\n          style={{\r\n            left: 35 * this.props.index - 21 + 'px'\r\n          }}\r\n        >\r\n          {this.props.value.playerS}\r\n        </div>\r\n        <div\r\n          key=\"score2\"\r\n          className=\"board-num two\"\r\n          style={{\r\n            left: 105 * this.props.index - 21 + 'px'\r\n          }}\r\n        >\r\n          {this.props.value.enemyS}\r\n        </div>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport './index.css';\r\nimport Paddle from './Paddle.js';\r\nimport Ball from './Ball.js';\r\nimport Score from './Score.js';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Used for setting state variable\r\n    let clientWidth   = document.documentElement.clientWidth,\r\n        clientHeight  = document.documentElement.clientHeight,\r\n        viewWidth     = 840,\r\n        viewHeight    = 600,\r\n        viewLeft      = (clientWidth  - viewWidth) / 2,\r\n        viewTop       = (clientHeight - viewHeight) / 2,\r\n\r\n        paddleDims    = { height: 14, width: 1.5 },\r\n        ballDims      = { height: 2, width: 2 },\r\n\r\n        dR            = viewHeight / 100,\r\n        maxX          = 140;\r\n    // if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n    //   viewWidth     = 336;\r\n    //   viewHeight    = 240;\r\n    //   viewLeft      = (clientWidth  - viewWidth) / 2;\r\n    //   viewTop       = (clientHeight - viewHeight) / 2;\r\n    //   dR            = viewHeight/100;\r\n    //   this.state.paddleDims    = { height: 20, width: 3};\r\n    //   ballDims      = { height: 3, width: 3};\r\n    // }\r\n\r\n    this.state = {\r\n      // Player is the left paddle, Enemy is the right paddle\r\n      playerLoc:    {x: 2, y: 50 - paddleDims.height/2}, \r\n      enemyLoc:     {x: maxX- paddleDims.width - 2, y: 50 - paddleDims.height/2},\r\n      ballLoc:      { \r\n                      x: maxX/2 - ballDims.height/2, \r\n                      y: 50 - ballDims.width/2 \r\n                    },\r\n\r\n      playerV:      0,\r\n      ballVel:      this.randomBallDir(115 - Math.random() * 65),\r\n\r\n      score:        { playerS: 0, enemyS: 0 },\r\n      lastHit:      \"\",\r\n      wallHit:      \"\",\r\n      isMouseDown:  false,\r\n      selectedPlayer: \"\",\r\n      // Screen/object dimensions\r\n      viewWidth,\r\n      viewHeight,\r\n      maxX,\r\n      viewLeft,\r\n      viewTop,\r\n\r\n      paddleDims,\r\n      ballDims,\r\n      dR\r\n    }\r\n  }\r\n  randomBallDir = initDeg => {\r\n    return {\r\n      x: Math.sin(Math.PI/180 * initDeg) * 1.8,\r\n      y: Math.cos(Math.PI/180 * initDeg) * 1.8,\r\n    }\r\n  }\r\n  nextFrame = () => {\r\n    let autoLocation = (relLoc, paddleStr, initPadLoc) => {\r\n      let initX   = this.state.maxX * 0.5,  // Where v starts to change\r\n          deltaV  = 0.8,        // maximum add to this.state.enemyLoc\r\n          deltaX  = this.state.maxX - 100, // linear scale\r\n          vo      = 0.7,\r\n          paddleCenter = initPadLoc.y + this.state.paddleDims.height/2,\r\n          ballCenter        = this.state.ballLoc.y + this.state.ballDims.height/2;\r\n\r\n\r\n      if (this.state.lastHit !== paddleStr && this.state.selectedPlayer !== paddleStr) {\r\n        if (ballCenter - paddleCenter < -1) { // Ball above paddle\r\n          if (paddleStr === \"enemy\" && this.state.ballLoc.x >= initX) {\r\n            if (ballCenter - paddleCenter < -3) { // Speed up\r\n              initPadLoc.y -= (relLoc) * (deltaV / deltaX) + vo;\r\n            }\r\n            else { // To prevent stuttering\r\n              initPadLoc.y -= 0.4;\r\n            }\r\n          } else if (paddleStr === \"player\" && this.state.ballLoc.x <= initX) {\r\n            if (ballCenter - paddleCenter < -3) { // Speed up\r\n              initPadLoc.y -= (relLoc) * (deltaV / deltaX) + vo;\r\n            }\r\n            else { // To prevent stuttering\r\n              initPadLoc.y -= 0.4;\r\n            }\r\n          }\r\n        }\r\n        else if (ballCenter - paddleCenter > 1) { // Ball below paddle\r\n          if (paddleStr === \"enemy\" && this.state.ballLoc.x >= initX) {\r\n            if (ballCenter - paddleCenter > 3) { // Speed up\r\n              initPadLoc.y += (relLoc) * (deltaV / deltaX) + vo;\r\n            }\r\n            else { // To prevent stuttering\r\n              initPadLoc.y += 0.4;\r\n          }\r\n          } else if (paddleStr === \"player\" && this.state.ballLoc.x <= initX) {\r\n            if (ballCenter - paddleCenter > 3) { // Speed up\r\n              initPadLoc.y += (relLoc) * (deltaV / deltaX) + vo;\r\n            }\r\n            else { // To prevent stuttering\r\n              initPadLoc.y += 0.4;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return initPadLoc;\r\n    }\r\n    let wallCollisionTest = nextY => {\r\n      if (nextY < 0.5)  return 0.5;\r\n      else if (nextY > 99.5 - this.state.paddleDims.height) return 99.5 - this.state.paddleDims.height;\r\n      else return nextY;\r\n    }\r\n    let ballPaddleCollision = (paddleStr, initPadLoc) => {\r\n      let deltaY        = this.state.paddleDims.height + this.state.ballDims.height,\r\n          deltaDeg      = 120, // Ball can shoot at a max angle of 70 deg from either side\r\n          offsetDeg     = (180 - deltaDeg) / 2 + 5, \r\n\r\n          ballCenter    = this.state.ballLoc.y + this.state.ballDims.height/2,\r\n          collisionLoc  = ballCenter - initPadLoc.y + this.state.ballDims.height/2,                // Determines rebound angle\r\n          reboundDeg    = collisionLoc * (deltaDeg / deltaY) + offsetDeg, // Measured clockwise\r\n          reboundPI     = reboundDeg* Math.PI / 180,                      // radians\r\n          totalSpeed    = 2.2,                                            // hypotenuse speed\r\n          \r\n          nextVX        = 0,\r\n          nextVY        = 0;\r\n\r\n      if (paddleStr === \"enemy\") {\r\n        nextVX = -Math.sin(reboundPI) * totalSpeed;\r\n      }\r\n      else                        {\r\n        nextVX = Math.sin(reboundPI) * totalSpeed;\r\n      }\r\n      // Add a little rng to stop the autobots from hitting it back and forth forever\r\n      nextVY = -Math.cos(reboundPI) * totalSpeed + (Math.random() - 0.5);\r\n      \r\n      let newLoc = {\r\n        x: this.state.ballLoc.x + nextVX,\r\n        y: this.state.ballLoc.y + nextVY\r\n      };\r\n      this.setState({\r\n        ballVel: { x: nextVX, y: nextVY },\r\n        ballLoc: newLoc,\r\n        lastHit: paddleStr,\r\n        wallHit: \"\"\r\n      })\r\n    }\r\n    let ballWallCollision = () => {    \r\n      let nextBallVel = {\r\n        x: this.state.ballVel.x,\r\n        y: -this.state.ballVel.y\r\n      }\r\n      let nextBallLoc = {\r\n        x: this.state.ballLoc.x + this.state.ballVel.x,\r\n        y: this.state.ballLoc.y + this.state.ballVel.y\r\n      }\r\n      this.setState({\r\n        ballVel: nextBallVel,\r\n        ballLoc: nextBallLoc\r\n      })\r\n      // Fixes a glitch where the ball hits a paddle and wall at the same time\r\n      if (this.state.ballLoc.y <= 0) {\r\n        this.setState({\r\n          wallHit: \"top\"\r\n        });\r\n      } else {\r\n        this.setState({\r\n          wallHit: \"bottom\"\r\n        })\r\n      }\r\n    }\r\n    let ballNoCollision = () => {\r\n      let nextBallVel = {\r\n        x: this.state.ballVel.x,\r\n        y: this.state.ballVel.y\r\n      }\r\n      let nextBallLoc = {\r\n        x: this.state.ballLoc.x + this.state.ballVel.x,\r\n        y: this.state.ballLoc.y + this.state.ballVel.y\r\n      }\r\n      this.setState({\r\n        ballVel: nextBallVel,\r\n        ballLoc: nextBallLoc\r\n      })\r\n    }\r\n    let newBall = () => {\r\n      let nextBallLoc = {\r\n        x: this.state.maxX/2 - this.state.ballDims.height/2,\r\n        y: 50 - this.state.ballDims.width/2\r\n      },\r\n        initDeg = 140 - Math.random() * 60,\r\n        nextBallVel = this.randomBallDir(initDeg);\r\n      this.setState({\r\n        ballVel: nextBallVel,\r\n        ballLoc: nextBallLoc\r\n      });\r\n    }\r\n    let newScore = () => {\r\n      let playerS = this.state.score.playerS,\r\n          enemyS  = this.state.score.enemyS;\r\n      if (this.state.ballLoc.x <= 0) {\r\n        enemyS++;\r\n      } else {\r\n        playerS++\r\n      }\r\n      this.setState({\r\n        lastHit: \"\",\r\n        score: { playerS, enemyS }\r\n      })\r\n    }\r\n\r\n    let paddleMovement = () => {\r\n      // Paddles moves if not currently selected with the mouse. AI!\r\n      let nextEnemyLoc = autoLocation(relEnemyLoc, \"enemy\", this.state.enemyLoc),\r\n      nextPlayerLoc = autoLocation(relPlayerLoc, \"player\", this.state.playerLoc);\r\n      // Paddle/wall collision with a little padding\r\n      nextEnemyLoc.y = wallCollisionTest(nextEnemyLoc.y);\r\n      nextPlayerLoc.y = wallCollisionTest(nextPlayerLoc.y);\r\n      this.setState({\r\n        playerLoc: nextPlayerLoc,\r\n        enemyLoc: nextEnemyLoc,\r\n      })\r\n    }\r\n    let ballMovement = () => {\r\n      // Ball hits left or right wall (Score!)\r\n      if (this.state.ballLoc.x <= 0 || this.state.ballLoc.x + this.state.ballDims.width >= 140) {\r\n        newScore();\r\n        newBall();\r\n      }\r\n      else if ( // Ball hits player\r\n        this.state.lastHit !== \"player\" &&\r\n        this.state.ballLoc.x <= this.state.playerLoc.x + this.state.paddleDims.width &&  // Ball left, paddle right\r\n        this.state.ballLoc.x >= this.state.playerLoc.x - 1 &&                     // Ball left, paddle left\r\n        this.state.ballLoc.y + this.state.ballDims.height >= this.state.playerLoc.y &&   // Ball bottom, paddle top\r\n        this.state.ballLoc.y <= this.state.playerLoc.y + this.state.paddleDims.height    // Ball top, paddle bottom\r\n      ) {\r\n        ballPaddleCollision(\"player\", this.state.playerLoc);\r\n      } \r\n      else if ( // Ball hits enemy\r\n        this.state.lastHit !== \"enemy\" &&\r\n        this.state.ballLoc.x + this.state.ballDims.width >= this.state.enemyLoc.x &&     // Ball right, paddle left\r\n        this.state.ballLoc.x <= this.state.enemyLoc.x + this.state.paddleDims.width + 1 &&   // Ball left, paddle right\r\n        this.state.ballLoc.y + this.state.ballDims.height >= this.state.enemyLoc.y &&    // Ball bottom, paddle top\r\n        this.state.ballLoc.y <= this.state.enemyLoc.y + this.state.paddleDims.height     // Ball top, paddle bottom\r\n      ) {\r\n        ballPaddleCollision(\"enemy\", this.state.enemyLoc)\r\n      }  // Ball hits top/bottom wall\r\n      else if (\r\n        (this.state.ballLoc.y <= 0 && this.state.wallHit !== \"top\") || \r\n        (this.state.ballLoc.y >= 100 - this.state.ballDims.height && this.state.wallHit !== \"bottom\")\r\n        ) { \r\n        ballWallCollision();\r\n      }\r\n      else { // Ball hits nothing\r\n        ballNoCollision();\r\n      }\r\n    } \r\n\r\n    const initX         = this.state.maxX * 0.5,                   // When the ball passes this, the balls become autonomous\r\n          relEnemyLoc   = this.state.ballLoc.x - initX, // The relative locations of the balls from initx\r\n          relPlayerLoc  = initX - this.state.ballLoc.x\r\n\r\n    paddleMovement();\r\n    ballMovement();\r\n\r\n    this.setState({\r\n      // Update for mouse calculations if screen changed size\r\n      viewTop: (document.documentElement.clientHeight - this.state.viewHeight) / 2,\r\n      viewLeft: (document.documentElement.clientWidth - this.state.viewWidth) / 2\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.intervalId = setInterval(this.nextFrame, 1000/60);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  handleMouseDown = event => {\r\n    if (\r\n      event.clientY >= this.state.viewTop + this.state.playerLoc.y * this.state.dR &&                                   // top\r\n      event.clientY <= this.state.viewTop + (this.state.playerLoc.y + this.state.paddleDims.height) * this.state.dR &&  // bottom\r\n      event.clientX >= this.state.viewLeft + (this.state.playerLoc.x - 2) * this.state.dR &&                            // left\r\n      event.clientX <= this.state.viewLeft + (this.state.playerLoc.x + this.state.paddleDims.width + 2) * this.state.dR // right\r\n    ) {\r\n      this.setState({\r\n        isMouseDown: true,\r\n        selectedPlayer: \"player\"\r\n      })\r\n    }\r\n    else if (\r\n      event.clientY >= this.state.viewTop + this.state.enemyLoc.y * this.state.dR &&                                    // top\r\n      event.clientY <= this.state.viewTop + (this.state.enemyLoc.y + this.state.paddleDims.height) * this.state.dR &&   // bottom\r\n      event.clientX >= this.state.viewLeft + (this.state.enemyLoc.x - 2) * this.state.dR &&                             // left\r\n      event.clientX <= this.state.viewLeft + (this.state.enemyLoc.x + this.state.paddleDims.width + 2) * this.state.dR  // right\r\n    ) {\r\n      this.setState({\r\n        isMouseDown: true,\r\n        selectedPlayer: \"enemy\"\r\n      })\r\n      \r\n    }\r\n  }\r\n  handleMouseUp = event => {\r\n    this.setState({\r\n      isMouseDown: false,\r\n      selectedPlayer: \"\"\r\n    })\r\n  }\r\n  handleMouseMove = event => {\r\n    if (this.state.isMouseDown === true) {\r\n       if (this.state.selectedPlayer === \"player\") { \r\n        let paddleTopToMiddle = this.state.paddleDims.height / 2 * this.state.dR,\r\n            click = event.clientY - paddleTopToMiddle,\r\n            clickOnBoard = (click - this.state.viewTop) / this.state.dR\r\n        // Stop wall collision\r\n        if (clickOnBoard < 0.5) {\r\n          clickOnBoard = 0.5;\r\n        } else if (clickOnBoard > 99.5 - this.state.paddleDims.height) { \r\n          clickOnBoard = 99.5 - this.state.paddleDims.height;\r\n        }\r\n        this.setState({\r\n          playerLoc: { \r\n            x: 2,\r\n            y: clickOnBoard\r\n          } \r\n        })\r\n      }\r\n    }\r\n    if (this.state.selectedPlayer === \"enemy\") { \r\n      let paddleTopToMiddle = this.state.paddleDims.height / 2 * this.state.dR,\r\n          click = event.clientY - paddleTopToMiddle,\r\n          clickOnBoard = (click - this.state.viewTop) / this.state.dR\r\n      // Stop wall collision\r\n      if (clickOnBoard < 0.5) { \r\n        clickOnBoard = 0.5;\r\n      } else if (clickOnBoard > 99.5 - this.state.paddleDims.height) { \r\n        clickOnBoard = 99.5 - this.state.paddleDims.height;\r\n      }\r\n      this.setState({\r\n        enemyLoc: { \r\n          x: this.state.maxX- this.state.paddleDims.width - 2,\r\n          y: clickOnBoard\r\n        } \r\n      })\r\n    }\r\n    event.stopPropagation()\r\n    event.preventDefault()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className     =\"viewport lock-screen\"\r\n        tabIndex      =\"0\"\r\n        style         ={{\r\n                        width: this.state.viewWidth,\r\n                        height: this.state.viewHeight,\r\n                        top: this.state.viewTop,\r\n                        left: this.state.viewLeft\r\n        }}\r\n        onMouseDown   ={this.handleMouseDown}\r\n        onMouseUp     ={this.handleMouseUp}\r\n        onMouseMove   ={this.handleMouseMove}\r\n        onTouchStart  ={this.handleMouseDown}\r\n        onTouchEnd    ={this.handleMouseUp}\r\n        onTouchMove   ={this.handleMouseMove}\r\n      >\r\n        <Ball\r\n          value       ={this.state.ballLoc}\r\n          itemprop    ={this.state.ballDims}\r\n          index       ={this.state.dR}\r\n        />\r\n        <Paddle\r\n          id          =\"player\"\r\n          value       ={this.state.playerLoc}\r\n          itemprop    ={this.state.paddleDims}\r\n          index       ={this.state.dR}\r\n          span        ={this.state.viewTop}\r\n        />\r\n        <Paddle \r\n          id          =\"enemy\"\r\n          value       ={this.state.enemyLoc}\r\n          itemprop    ={this.state.paddleDims}\r\n          index       ={this.state.dR}\r\n          span        ={this.state.viewTop}\r\n        />\r\n        <Score \r\n          value       ={this.state.score} \r\n          index       ={this.state.dR}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nclass Index extends React.Component {\n\n  render() {\n    return (\n      <div className=\"container\">\n        <App />\n      </div> \n    )\n  }\n}\n\nReactDOM.render(<Index/>, document.getElementById('root'));\n"],"sourceRoot":""}